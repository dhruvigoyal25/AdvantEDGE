/*
 * Copyright (c) 2022  The AdvantEDGE Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * AdvantEDGE Bandwidth Management API
 * Bandwidth Management Sercice is AdvantEDGE's implementation of [ETSI MEC ISG MEC015 Traffic Management APIs](https://www.etsi.org/deliver/etsi_gs/MEC/001_099/015/02.02.01_60/gs_MEC015v020201p.pdf) <p>[Copyright (c) ETSI 2017](https://forge.etsi.org/etsi-forge-copyright-notice.txt) <p>**Micro-service**<br>[meep-tm](https://github.com/InterDigitalInc/AdvantEDGE/tree/master/go-apps/meep-tm/server/bwm) <p>**Type & Usage**<br>Edge Service used by edge applications that want to get information about BWM Info and Session(s) in the network <p>**Note**<br>AdvantEDGE supports all Bandwidth Management API endpoints.
 *
 * OpenAPI spec version: 2.2.1
 * Contact: AdvantEDGE@InterDigital.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.29
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AppTerminationNotification', 'model/AppTerminationNotificationLinks', 'model/BwInfo', 'model/BwInfoDeltas', 'model/BwInfoDeltasSessionFilter', 'model/BwInfoSessionFilter', 'model/BwInfoTimeStamp', 'model/LinkType', 'model/OperationActionType', 'model/ProblemDetails', 'api/BwmApi', 'api/LocationApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AppTerminationNotification'), require('./model/AppTerminationNotificationLinks'), require('./model/BwInfo'), require('./model/BwInfoDeltas'), require('./model/BwInfoDeltasSessionFilter'), require('./model/BwInfoSessionFilter'), require('./model/BwInfoTimeStamp'), require('./model/LinkType'), require('./model/OperationActionType'), require('./model/ProblemDetails'), require('./api/BwmApi'), require('./api/LocationApi'));
  }
}(function(ApiClient, AppTerminationNotification, AppTerminationNotificationLinks, BwInfo, BwInfoDeltas, BwInfoDeltasSessionFilter, BwInfoSessionFilter, BwInfoTimeStamp, LinkType, OperationActionType, ProblemDetails, BwmApi, LocationApi) {
  'use strict';

  /**
   * Bandwidth_Management_Sercice_is_AdvantEDGEs_implementation_of__ETSI_MEC_ISG_MEC015_Traffic_Management_APIs_httpswww_etsi_orgdeliveretsi_gsMEC001_09901502_02_01_60gs_MEC015v020201p_pdf_p_Copyright__c_ETSI_2017_httpsforge_etsi_orgetsi_forge_copyright_notice_txt_pMicro_servicebr_meep_tm_httpsgithub_comInterDigitalIncAdvantEDGEtreemastergo_appsmeep_tmserverbwm_pType__UsagebrEdge_Service_used_by_edge_applications_that_want_to_get_information_about_BWM_Info_and_Session_s_in_the_network_pNotebrAdvantEDGE_supports_all_Bandwidth_Management_API_endpoints_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var AdvantEdgeBandwidthManagementApi = require('index'); // See note below*.
   * var xxxSvc = new AdvantEdgeBandwidthManagementApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new AdvantEdgeBandwidthManagementApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new AdvantEdgeBandwidthManagementApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new AdvantEdgeBandwidthManagementApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 2.2.1
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AppTerminationNotification model constructor.
     * @property {module:model/AppTerminationNotification}
     */
    AppTerminationNotification: AppTerminationNotification,
    /**
     * The AppTerminationNotificationLinks model constructor.
     * @property {module:model/AppTerminationNotificationLinks}
     */
    AppTerminationNotificationLinks: AppTerminationNotificationLinks,
    /**
     * The BwInfo model constructor.
     * @property {module:model/BwInfo}
     */
    BwInfo: BwInfo,
    /**
     * The BwInfoDeltas model constructor.
     * @property {module:model/BwInfoDeltas}
     */
    BwInfoDeltas: BwInfoDeltas,
    /**
     * The BwInfoDeltasSessionFilter model constructor.
     * @property {module:model/BwInfoDeltasSessionFilter}
     */
    BwInfoDeltasSessionFilter: BwInfoDeltasSessionFilter,
    /**
     * The BwInfoSessionFilter model constructor.
     * @property {module:model/BwInfoSessionFilter}
     */
    BwInfoSessionFilter: BwInfoSessionFilter,
    /**
     * The BwInfoTimeStamp model constructor.
     * @property {module:model/BwInfoTimeStamp}
     */
    BwInfoTimeStamp: BwInfoTimeStamp,
    /**
     * The LinkType model constructor.
     * @property {module:model/LinkType}
     */
    LinkType: LinkType,
    /**
     * The OperationActionType model constructor.
     * @property {module:model/OperationActionType}
     */
    OperationActionType: OperationActionType,
    /**
     * The ProblemDetails model constructor.
     * @property {module:model/ProblemDetails}
     */
    ProblemDetails: ProblemDetails,
    /**
     * The BwmApi service constructor.
     * @property {module:api/BwmApi}
     */
    BwmApi: BwmApi,
    /**
     * The LocationApi service constructor.
     * @property {module:api/LocationApi}
     */
    LocationApi: LocationApi
  };

  return exports;
}));
